.\" This definition swiped from the nmap(1) page, which in turn was ripped from gcc(1) man page
.de Sp
.if n .sp
.if t .sp 0.4
..
.TH AMAP 1
.SH NAME
amap \- a powerful application mapper
.SH SYNOPSIS
.B amap
[Mode] [Options] <target> <port/portrange> [<port> ...]
.SH DESCRIPTION

.I Amap 
is a scanning tool that allows you to identify the applications that are
running on a specific port or ports. This is achieved by connecting to the
port(s) and sending trigger packets. These trigger packets will typically be
an application protocol handshake. Many network daemons will only respond to
the correct handshake (i.e. SSL). Amap then looks up the response in a list
and prints out any match it finds. 
.I Amap 
supports tcp and udp protocols, regular and SSL-enabled ASCII and binary 
protocols and a variety of options are at your disposal to control the 
behaviour of the tool. It can take an nmap machine readable output file 
as its input file and can log to a file and screen. 
.PP
Why use our tool? Well, when portscanning a host, you will be presented with a
list of open ports. In many cases, the port number tells you what
application is running. Port 25 is usually SMTP, port 80 mostly HTTP.
However, this is not always the case, and especially when dealing with
proprietary protocols running on non-standard ports you will not be
able to determine what application is running. With amap, you will be able
to identify that SSL server running on port 3445 and some oracle listener on
port 23. Also, it will actually do an SSL connect if you want and then
try to identify the SSL-enabled protocol!
.PP
Please also see
.I amapcrap -h
for an additional tool for ports who do not give any output.
.SH MODES
.I amap
can be run in three different modes:
.TP
.B \-A 
Map applications: send triggers and analyse responses (default). All options
can be used in this mode.
.TP
.B \-B
Just grab banners, do not send triggers. Only a few commandline options are
used from the set when run this mode. They are maked below as "(Banner)"
.TP
.B \-P
No banner, application, stuff - be a (full connect) port scanner! Only a few
commandline options are
used from the set when run this mode. They are maked below as "(Portscan)"
.TP
.B \-W
This is the Web Online Update mode. When specifying this option, all other
options except -D are ignored, and the application fingerprints and triggers
are updated from the thc.org web site.
.SH OPTIONS
Options can also be seen by typing 'amap -h'. Here follows an explanation of
all options.
.TP
.B HOSTS AND PORTS (all modes)
.TP
.B \-i <file> 
This makes amap read its hosts and ports from the specified file. The file
must be generated by nmap, using the -oM <file> option of nmap. It doesn't
matter if you have multiple hosts and mixed tcp and udp ports in the file:
amap reads them all.
.TP
.B \<target> and <port/portlist>
Target can be an IP address or fully qualified host name. A port can be any
number between 1 and 65535, ranges (e.g. 1-65535) are also supported.
You can specify as many ports on the command
line as you want. Ports are by default TCP (see -u option below).
.TP
.B GENERAL OPTIONS
.TP
None of these are required but some can be quite useful.
.TP
Note that all options can be used in amap's default mode (\-A), the banner grab (\-B) and portscan modes (-\P) support only those options which are marked as such.
.TP
.B \-u
Ports specified on commandline are UDP (default is TCP). (Modes: Amap, Banner,
Portscan)
.TP
.B \-6
Use IPv6, not IPv4
.TP
.B \-1
Only send triggers to a port until 1st identification. Speeeeed!
.TP
.B \-v
Verbose. Usually not used, but gives detailed info on the screen as to what
connections are made to what ip's/ports. Don't use twice. You will be bored
to death with even more stupid uninteresting information. (Modes: Amap,
Banner, Portscan)
.TP
.B \-q
Quiet. Has got nothing to do with the "-v" option :-) 
If the -q option is applied, all closed and timed out ports are NOT marked
as unidentified, and are not reported at all.
.TP
.B \-d
Make a hex dump of all received responses. The default is to only print
unrecognised responses.
.TP
.B \-U
Do not dump unrecognized responses. (see option above)
.TP
.B \-b
Print ACSII banners (if one is received).
.TP
.B \-o <file>
Log the output of amap to <file>. (Modes: Amap, Banner, Portscan)
.TP
.B \-m <file>
Make the log file output (-o option) machine readable (colon seperated).
(Modes: Amap, Banner, Portscan)
.TP
.B \-D <file>
Triggers and responses are read by default from appdefs.trig and
appdefs.resp. By specifying for instance '-D trojans' it will read triggers
and responses from trojans.trig and trojans.resp. It can be very usefull if
you only want to scan for certain applications. Please take a look at the
appdefs files to see what the format of these files is (it's pretty simple,
you shouldn't have any trouble adding your own triggers and responses, which
you are encouraged to do, btw).
.TP
.B SCANNING OPTIONS
These options influence the behaviour of amap when scanning.
.TP
.B \-p <proto>
This specifies a single protocol trigger to send. The name of the protocol must
match one of the first fields of the lines in the trigger file. For
instance, '-p SSL' will scan only for SSL enabled port. However, if by
chance other protocols are also indentified, they will be printed.
.TP
.B \-S
Do NOT NOT look behind an SSL port. Otherwise amap will reconnect later to
identify the service running behind the ssl wrapper.
.TP
.B \-R
Do NOT identify RPC service. Otherwise amap will connect many times to
identify the exact rpc service type and version. This can be time consuming.
.TP
.B \-c n
Open 'n' parallel tasks (connections). The default is 32, the maximum 256.
(Modes: Amap, Banner, Portscan)
.TP
.B \-C n
If a TCP connect timed out (did not finnish in "-T n" time), how often
should be retried the connect? This is by default 3.
(Modes: Amap, Banner, Portscan)
.TP
.B \-T n
Causes amap to wait upto 'n' seconds for a successful TCP connect. Default is 5 seconds, but
this can be too few sometimes when scanning over a slow link, and too long
on a LAN. (Modes: Amap, Banner, Portscan)
.TP
.B \-t n
Causes amap to wait upto 'n' seconds for a response. Default is 5 seconds, but
this can be too few sometimes when scanning over a slow link, and too long
on a LAN. (Modes: Amap, Banner)
.TP
.B \-H
Skip potentially harmful triggers. Some daemons and applications will crash
when receiving long or unexpected binary input. -H skips triggers marked as
potentially harmful. See appdefs.trig for information on how to mark a
trigger as harmful.
.SH LICENSE AND USER BEWARES
.I amap 
is (C) 2003 by vanHauser and DJ.RevMoon (of THC - www.thc.org)
.Sp
This program is free software; you can redistribute it
and/or modify it under the terms of the GNU General Public
License as published by the Free Software Foundation;
Version 2.  This guarantees your right to use, modify, and
redistribute amap under certain conditions.
.Sp
Source is provided to this software because we believe users
have a right to know exactly what a program is going to do
before they run it.  This also allows you to audit the
software for security holes.
.Sp
Source code also allows you to port amap to new platforms,
fix bugs, and add new features.  You are highly encouraged
to send your application triggers and responses to us. Please send triggers
and responses (either as a tcpdump file or in our own format) to
amap-dev@thc.org.
.Sp
This program is distributed in the hope that it will be useful, but
.B WITHOUT ANY WARRANTY;
without even the implied warranty of
.B MERCHANTABILITY 
or 
.B FITNESS FOR A PARTICULAR PURPOSE.
See the GNU
General Public License for more details (it is in the COPYING file of
the
.I amap 
distribution).  
.Sp
It should also be noted that amap has been known to crash
certain poorly written applications, TCP/IP stacks, and even
operating systems.
.B Amap should never be run against mission critical systems 
unless you are prepared to suffer downtime.  We acknowledge
here that Amap may crash your systems or networks and we
disclaim all liability for any damage or problems Amap could
cause.
.SH BUGS
There are bound to be numerous bugs in amap. Please tell us if you find any.
Please email to amap-dev@thc.org.
